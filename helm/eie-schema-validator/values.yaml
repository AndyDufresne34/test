---
image:
  pullPolicy: IfNotPresent
  repository: '{{ .Values.registry }}/{{ include "app.fullname" . }}'

env:
  ASPNETCORE_ENVIRONMENT: "{{ .Values.environment }}"
  DOTNET_USE_POLLING_FILE_WATCHER: "{{ .Values.polling_file_watcher }}"
  
# envFrom:
#   - configMapRef:
#       name: env-from-configmap
#   - secretRef:
#       name: test-secret

validation:
  consumer_number: 8
  retry_count: 3
  schema:
    bucket: schemas
    cache_time_hours: 2

volumes:
  - name: config
    configMap:
      name: '{{ include "app.fullname" . }}-config'

volumeMounts:
  - name: config
    mountPath: /app/appsettings.{{ .Values.environment }}.json
    subPath: appsettings.json

deploymentAnnotations:
  configmap.reloader.stakater.com/reload: '{{ include "app.fullname" . }}-config'

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "traefik"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: '{{ include "app.fullname" . }}.{{ .Values.cluster_domain }}'
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  httpGet:
    path: /health
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 5
  failureThreshold: 5

# Note: HPA settings requires corresponding resources.requests
autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 2
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  create: false


podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: '80'
  prometheus.io/path: '/metrics-text'