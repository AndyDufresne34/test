---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "app.fullname" . }}-config
  labels:
    {{- include "app.labels" . | nindent 4 }}
data:
  appsettings.json: |-
    {
      "Quartz": {
        "Job": {
          "Tks": {
            "SubsystemRoute": 1,
            "BatchSize": 100,
            "CronExpression": "0/10 * * * * ?",
            "IsEnabled": true
          }
        }
      },
      "Logging": {
        "LogLevel": {
          "CorrelationId.CorrelationIdMiddleware": "Warning",
          "Microsoft.Extensions.Diagnostics.HealthChecks": "Warning"
        }
      },
      "NLogExtraConfig": {
        "min_level": "{{ .Values.log_level }}"
      },
      "OpenTelemetry": {
        "OtlpEndpointUrl": "{{ .Values.infra.jaeger.url }}"
      },
      "Kafka": {
        "Uri": "{{ .Values.infra.kafka.url }}",
        "Consumer": {
          "GroupId": "{{ include "app.fullname" . }}"
        }
      },
      "AWS": {
        "ServiceUrl": "http://{{ .Values.infra.minio.url }}",
        "AccessKeyId": "{{ .Values.infra.minio.access_key }}",
        "SecretAccessKey": "{{ .Values.infra.minio.secret_key }}"
      },
      "CicService": {
        "GetContainersServiceApiUrl": "{{ .Values.external.cic_service.GetContainersServiceUrl }}",
        "AckContainersServiceApiUrl": "{{ .Values.external.cic_service.AckContainersServiceUrl }}"
      },
      "Receiver": {
        "InitialMessageTopic": "{{ .Values.infra.kafka.topics.initial }}",
        "ConsumerNumber": {{ .Values.receiver.consumer_number }},
        "ErrorMessageTopic": "{{ .Values.infra.kafka.topics.errors }}",
        "RetryCount": {{ .Values.receiver.retry_count }},
        "StorageRootFolder": "{{ .Values.infra.kafka.topics.received }}",
        "OutputTopic": "{{ .Values.infra.kafka.topics.received }}"
      }
    }
